ARM GAS  /tmp/cclBvXQ9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  19              		.align	2
  20              		.global	MX_USART1_UART_Init
  21              		.thumb
  22              		.thumb_func
  24              	MX_USART1_UART_Init:
  25              	.LFB65:
  26              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * @attention
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/usart.c   ****   * All rights reserved.</center></h2>
  11:Src/usart.c   ****   *
  12:Src/usart.c   ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/usart.c   ****   * the "License"; You may not use this file except in compliance with the
  14:Src/usart.c   ****   * License. You may obtain a copy of the License at:
  15:Src/usart.c   ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** 
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** 
  25:Src/usart.c   **** /* USER CODE END 0 */
  26:Src/usart.c   **** 
  27:Src/usart.c   **** UART_HandleTypeDef huart1;
  28:Src/usart.c   **** DMA_HandleTypeDef hdma_usart1_rx;
  29:Src/usart.c   **** 
  30:Src/usart.c   **** /* USART1 init function */
  31:Src/usart.c   **** 
  32:Src/usart.c   **** void MX_USART1_UART_Init(void)
ARM GAS  /tmp/cclBvXQ9.s 			page 2


  33:Src/usart.c   **** {
  27              		.loc 1 33 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  34:Src/usart.c   **** 
  35:Src/usart.c   ****   huart1.Instance = USART1;
  36              		.loc 1 35 0
  37 0002 0A48     		ldr	r0, .L4
  38 0004 0A4B     		ldr	r3, .L4+4
  39 0006 0360     		str	r3, [r0]
  36:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  40              		.loc 1 36 0
  41 0008 4FF4E133 		mov	r3, #115200
  42 000c 4360     		str	r3, [r0, #4]
  37:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  43              		.loc 1 37 0
  44 000e 0023     		movs	r3, #0
  45 0010 8360     		str	r3, [r0, #8]
  38:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  46              		.loc 1 38 0
  47 0012 C360     		str	r3, [r0, #12]
  39:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  48              		.loc 1 39 0
  49 0014 0361     		str	r3, [r0, #16]
  40:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  50              		.loc 1 40 0
  51 0016 0C22     		movs	r2, #12
  52 0018 4261     		str	r2, [r0, #20]
  41:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  53              		.loc 1 41 0
  54 001a 8361     		str	r3, [r0, #24]
  42:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  55              		.loc 1 42 0
  56 001c C361     		str	r3, [r0, #28]
  43:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  57              		.loc 1 43 0
  58 001e FFF7FEFF 		bl	HAL_UART_Init
  59              	.LVL0:
  60 0022 08B1     		cbz	r0, .L1
  44:Src/usart.c   ****   {
  45:Src/usart.c   ****     Error_Handler();
  61              		.loc 1 45 0
  62 0024 FFF7FEFF 		bl	Error_Handler
  63              	.LVL1:
  64              	.L1:
  65 0028 08BD     		pop	{r3, pc}
  66              	.L5:
  67 002a 00BF     		.align	2
  68              	.L4:
  69 002c 00000000 		.word	huart1
  70 0030 00380140 		.word	1073821696
ARM GAS  /tmp/cclBvXQ9.s 			page 3


  71              		.cfi_endproc
  72              	.LFE65:
  74              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  75              		.align	2
  76              		.global	HAL_UART_MspInit
  77              		.thumb
  78              		.thumb_func
  80              	HAL_UART_MspInit:
  81              	.LFB66:
  46:Src/usart.c   ****   }
  47:Src/usart.c   **** 
  48:Src/usart.c   **** }
  49:Src/usart.c   **** 
  50:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  51:Src/usart.c   **** {
  82              		.loc 1 51 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 24
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              	.LVL2:
  87 0000 70B5     		push	{r4, r5, r6, lr}
  88              	.LCFI1:
  89              		.cfi_def_cfa_offset 16
  90              		.cfi_offset 4, -16
  91              		.cfi_offset 5, -12
  92              		.cfi_offset 6, -8
  93              		.cfi_offset 14, -4
  94 0002 86B0     		sub	sp, sp, #24
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 40
  52:Src/usart.c   **** 
  53:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  97              		.loc 1 53 0
  98 0004 0023     		movs	r3, #0
  99 0006 0293     		str	r3, [sp, #8]
 100 0008 0393     		str	r3, [sp, #12]
 101 000a 0493     		str	r3, [sp, #16]
 102 000c 0593     		str	r3, [sp, #20]
  54:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 103              		.loc 1 54 0
 104 000e 0268     		ldr	r2, [r0]
 105 0010 254B     		ldr	r3, .L10
 106 0012 9A42     		cmp	r2, r3
 107 0014 46D1     		bne	.L6
 108 0016 0446     		mov	r4, r0
 109              	.LBB2:
  55:Src/usart.c   ****   {
  56:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  57:Src/usart.c   **** 
  58:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
  59:Src/usart.c   ****     /* USART1 clock enable */
  60:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
 110              		.loc 1 60 0
 111 0018 03F55843 		add	r3, r3, #55296
 112 001c 9A69     		ldr	r2, [r3, #24]
 113 001e 42F48042 		orr	r2, r2, #16384
 114 0022 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/cclBvXQ9.s 			page 4


 115 0024 9A69     		ldr	r2, [r3, #24]
 116 0026 02F48042 		and	r2, r2, #16384
 117 002a 0092     		str	r2, [sp]
 118 002c 009A     		ldr	r2, [sp]
 119              	.LBE2:
 120              	.LBB3:
  61:Src/usart.c   ****   
  62:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 121              		.loc 1 62 0
 122 002e 9A69     		ldr	r2, [r3, #24]
 123 0030 42F00402 		orr	r2, r2, #4
 124 0034 9A61     		str	r2, [r3, #24]
 125 0036 9B69     		ldr	r3, [r3, #24]
 126 0038 03F00403 		and	r3, r3, #4
 127 003c 0193     		str	r3, [sp, #4]
 128 003e 019B     		ldr	r3, [sp, #4]
 129              	.LBE3:
  63:Src/usart.c   ****     /**USART1 GPIO Configuration    
  64:Src/usart.c   ****     PA9     ------> USART1_TX
  65:Src/usart.c   ****     PA10     ------> USART1_RX 
  66:Src/usart.c   ****     */
  67:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 130              		.loc 1 67 0
 131 0040 4FF40073 		mov	r3, #512
 132 0044 0293     		str	r3, [sp, #8]
  68:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 133              		.loc 1 68 0
 134 0046 0223     		movs	r3, #2
 135 0048 0393     		str	r3, [sp, #12]
  69:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 136              		.loc 1 69 0
 137 004a 0323     		movs	r3, #3
 138 004c 0593     		str	r3, [sp, #20]
  70:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 139              		.loc 1 70 0
 140 004e 174E     		ldr	r6, .L10+4
 141 0050 3046     		mov	r0, r6
 142              	.LVL3:
 143 0052 02A9     		add	r1, sp, #8
 144 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 145              	.LVL4:
  71:Src/usart.c   **** 
  72:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 146              		.loc 1 72 0
 147 0058 4FF48063 		mov	r3, #1024
 148 005c 0293     		str	r3, [sp, #8]
  73:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 149              		.loc 1 73 0
 150 005e 0025     		movs	r5, #0
 151 0060 0395     		str	r5, [sp, #12]
  74:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 74 0
 153 0062 0495     		str	r5, [sp, #16]
  75:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 154              		.loc 1 75 0
 155 0064 3046     		mov	r0, r6
 156 0066 02A9     		add	r1, sp, #8
ARM GAS  /tmp/cclBvXQ9.s 			page 5


 157 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 158              	.LVL5:
  76:Src/usart.c   **** 
  77:Src/usart.c   ****     /* USART1 DMA Init */
  78:Src/usart.c   ****     /* USART1_RX Init */
  79:Src/usart.c   ****     hdma_usart1_rx.Instance = DMA1_Channel5;
 159              		.loc 1 79 0
 160 006c 1048     		ldr	r0, .L10+8
 161 006e 114B     		ldr	r3, .L10+12
 162 0070 0360     		str	r3, [r0]
  80:Src/usart.c   ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 163              		.loc 1 80 0
 164 0072 4560     		str	r5, [r0, #4]
  81:Src/usart.c   ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 165              		.loc 1 81 0
 166 0074 8560     		str	r5, [r0, #8]
  82:Src/usart.c   ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 167              		.loc 1 82 0
 168 0076 8023     		movs	r3, #128
 169 0078 C360     		str	r3, [r0, #12]
  83:Src/usart.c   ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 170              		.loc 1 83 0
 171 007a 0561     		str	r5, [r0, #16]
  84:Src/usart.c   ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 172              		.loc 1 84 0
 173 007c 4561     		str	r5, [r0, #20]
  85:Src/usart.c   ****     hdma_usart1_rx.Init.Mode = DMA_CIRCULAR;
 174              		.loc 1 85 0
 175 007e 2023     		movs	r3, #32
 176 0080 8361     		str	r3, [r0, #24]
  86:Src/usart.c   ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 177              		.loc 1 86 0
 178 0082 C561     		str	r5, [r0, #28]
  87:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 179              		.loc 1 87 0
 180 0084 FFF7FEFF 		bl	HAL_DMA_Init
 181              	.LVL6:
 182 0088 08B1     		cbz	r0, .L8
  88:Src/usart.c   ****     {
  89:Src/usart.c   ****       Error_Handler();
 183              		.loc 1 89 0
 184 008a FFF7FEFF 		bl	Error_Handler
 185              	.LVL7:
 186              	.L8:
  90:Src/usart.c   ****     }
  91:Src/usart.c   **** 
  92:Src/usart.c   ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart1_rx);
 187              		.loc 1 92 0
 188 008e 084B     		ldr	r3, .L10+8
 189 0090 6363     		str	r3, [r4, #52]
 190 0092 5C62     		str	r4, [r3, #36]
  93:Src/usart.c   **** 
  94:Src/usart.c   ****     /* USART1 interrupt Init */
  95:Src/usart.c   ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 191              		.loc 1 95 0
 192 0094 2520     		movs	r0, #37
 193 0096 0021     		movs	r1, #0
ARM GAS  /tmp/cclBvXQ9.s 			page 6


 194 0098 0A46     		mov	r2, r1
 195 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 196              	.LVL8:
  96:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 197              		.loc 1 96 0
 198 009e 2520     		movs	r0, #37
 199 00a0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 200              	.LVL9:
 201              	.L6:
  97:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
  98:Src/usart.c   **** 
  99:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
 100:Src/usart.c   ****   }
 101:Src/usart.c   **** }
 202              		.loc 1 101 0
 203 00a4 06B0     		add	sp, sp, #24
 204              	.LCFI3:
 205              		.cfi_def_cfa_offset 16
 206              		@ sp needed
 207 00a6 70BD     		pop	{r4, r5, r6, pc}
 208              	.L11:
 209              		.align	2
 210              	.L10:
 211 00a8 00380140 		.word	1073821696
 212 00ac 00080140 		.word	1073809408
 213 00b0 00000000 		.word	hdma_usart1_rx
 214 00b4 58000240 		.word	1073872984
 215              		.cfi_endproc
 216              	.LFE66:
 218              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 219              		.align	2
 220              		.global	HAL_UART_MspDeInit
 221              		.thumb
 222              		.thumb_func
 224              	HAL_UART_MspDeInit:
 225              	.LFB67:
 102:Src/usart.c   **** 
 103:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 104:Src/usart.c   **** {
 226              		.loc 1 104 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              	.LVL10:
 105:Src/usart.c   **** 
 106:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 231              		.loc 1 106 0
 232 0000 0268     		ldr	r2, [r0]
 233 0002 0B4B     		ldr	r3, .L16
 234 0004 9A42     		cmp	r2, r3
 235 0006 12D1     		bne	.L15
 104:Src/usart.c   **** 
 236              		.loc 1 104 0
 237 0008 10B5     		push	{r4, lr}
 238              	.LCFI4:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
ARM GAS  /tmp/cclBvXQ9.s 			page 7


 241              		.cfi_offset 14, -4
 242 000a 0446     		mov	r4, r0
 107:Src/usart.c   ****   {
 108:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 109:Src/usart.c   **** 
 110:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 111:Src/usart.c   ****     /* Peripheral clock disable */
 112:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 243              		.loc 1 112 0
 244 000c 094A     		ldr	r2, .L16+4
 245 000e 9369     		ldr	r3, [r2, #24]
 246 0010 23F48043 		bic	r3, r3, #16384
 247 0014 9361     		str	r3, [r2, #24]
 113:Src/usart.c   ****   
 114:Src/usart.c   ****     /**USART1 GPIO Configuration    
 115:Src/usart.c   ****     PA9     ------> USART1_TX
 116:Src/usart.c   ****     PA10     ------> USART1_RX 
 117:Src/usart.c   ****     */
 118:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 248              		.loc 1 118 0
 249 0016 0848     		ldr	r0, .L16+8
 250              	.LVL11:
 251 0018 4FF4C061 		mov	r1, #1536
 252 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 253              	.LVL12:
 119:Src/usart.c   **** 
 120:Src/usart.c   ****     /* USART1 DMA DeInit */
 121:Src/usart.c   ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 254              		.loc 1 121 0
 255 0020 606B     		ldr	r0, [r4, #52]
 256 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 257              	.LVL13:
 122:Src/usart.c   **** 
 123:Src/usart.c   ****     /* USART1 interrupt Deinit */
 124:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 258              		.loc 1 124 0
 259 0026 2520     		movs	r0, #37
 260 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 261              	.LVL14:
 262 002c 10BD     		pop	{r4, pc}
 263              	.LVL15:
 264              	.L15:
 265              	.LCFI5:
 266              		.cfi_def_cfa_offset 0
 267              		.cfi_restore 4
 268              		.cfi_restore 14
 269 002e 7047     		bx	lr
 270              	.L17:
 271              		.align	2
 272              	.L16:
 273 0030 00380140 		.word	1073821696
 274 0034 00100240 		.word	1073876992
 275 0038 00080140 		.word	1073809408
 276              		.cfi_endproc
 277              	.LFE67:
 279              		.comm	hdma_usart1_rx,68,4
 280              		.comm	huart1,64,4
ARM GAS  /tmp/cclBvXQ9.s 			page 8


 281              		.text
 282              	.Letext0:
 283              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 284              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 285              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 286              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 287              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 288              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 289              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 290              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 291              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 292              		.file 11 "Inc/main.h"
ARM GAS  /tmp/cclBvXQ9.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/cclBvXQ9.s:19     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cclBvXQ9.s:24     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cclBvXQ9.s:69     .text.MX_USART1_UART_Init:000000000000002c $d
                            *COM*:0000000000000040 huart1
     /tmp/cclBvXQ9.s:75     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cclBvXQ9.s:80     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cclBvXQ9.s:211    .text.HAL_UART_MspInit:00000000000000a8 $d
                            *COM*:0000000000000044 hdma_usart1_rx
     /tmp/cclBvXQ9.s:219    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cclBvXQ9.s:224    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cclBvXQ9.s:273    .text.HAL_UART_MspDeInit:0000000000000030 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
